#!/usr/bin/env python
import os
import json
import requests

commit = os.environ.get('GIT_COMMIT')
if commit is None:
   print "GIT_COMMIT is unset; exiting."
   exit(0)

print "Updating status for {}".format(commit)
		
github_url = 'https://github.com/'
giturl = os.environ['GIT_URL']
if not giturl.startswith(github_url):
   print "Triggered for non-github repo"
   exit(0)
gh_repo = giturl[len(github_url):]

data = {'state': os.environ['GH_STATE']}

data['context'] = "Project Atomic (CentOS CI)"
data['target_url'] = os.environ['BUILD_URL']
if data['state'] == 'success':
   data['description'] = "Go go gadget commit!"
elif data['state'] == 'pending':
   data['description'] = "Inspector Gadget *may* return after these messages."
elif data['state'] == 'failed':
   data['description'] = ":sadface:"
else:
   data['description'] = "Unknown state?"

api_url = ("https://api.github.com/repos/%s/statuses/%s" % (gh_repo, commit))

token = open(os.path.expanduser('~/github-token.txt')).read().strip()
token_header = {'Authorization': 'token ' + token}

r = requests.post(api_url, json=data, headers=token_header)
		
if r.status_code != requests.codes.created:
   print "Failed to update commit status [HTTP %d]" % r.status_code
   print r.headers
   print r.json()
   exit(1)

